// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  products  Product[]
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  products  Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(255)
  description String   @db.Text
  price       Float
  image       String   @db.VarChar(255)
  quantity     Int     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  brandId     Int
  brand       Brand   @relation(fields: [brandId], references: [id])
  images      ProductImage[]
  reviews     Review[]
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String   @db.VarChar(255)
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    String?  @db.VarChar(255)
  rating    Int
  comment   String   @db.Text
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}